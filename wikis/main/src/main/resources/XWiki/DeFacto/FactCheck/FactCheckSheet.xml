<?xml version="1.1" encoding="UTF-8"?>

<xwikidoc version="1.4" reference="XWiki.DeFacto.FactCheck.FactCheckSheet" locale="">
  <web>XWiki.DeFacto.FactCheck</web>
  <name>FactCheckSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($discard = $xwiki.ssx.use('XWiki.DeFacto.FactCheck.FactCheckSheet'))
#set ($discard = $xwiki.jsx.use('XWiki.DeFacto.FactCheck.FactCheckSheet'))
#set ($discard = $xwiki.jsx.use('XWiki.DeFacto.LnF.TabsJSX'))
#set ($discard = $xwiki.jsx.use('CookieConsent.Script'))
#set ($discard = $xwiki.ssx.use('CookieConsent.WebHome'))
#set ($object = $doc.getObject('XWiki.DeFacto.FactCheck.FactCheckClass'))
#if ($object == $NULL)
  #stop()
#end
#set ($claimReview = $doc.getObject('XWiki.DeFacto.Review.ClaimReviewClass'))
#set ($discard = $doc.use($object))
#set ($editing = $xcontext.action == 'edit')

(% class="xform defacto-fact-check" %)(((

#if ($editing)

{{html clean="false"}}
  &lt;ul class="defacto-a-propos nav nav-tabs" role="tablist"&gt;
    &lt;li role="presentation" class="active"&gt;&lt;a href="#article" aria-controls="article" role="tab" data-toggle="tab"&gt;Article&lt;/a&gt;&lt;/li&gt;
    &lt;li role="presentation"&gt;&lt;a href="#review" aria-controls="review" role="tab" data-toggle="tab"&gt;Évaluation&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
{{/html}}

(% class="tab-content defacto-fact-check-edit" %)(((
  (% role="tabpanel" class="tab-pane active" id="article" %)(((
    = $doc.displayPrettyName('title', false, false) =
    $doc.display('title')

    = $doc.displayPrettyName('authors', false, false) =
    $doc.display('authors')

    = $doc.displayPrettyName('pdate', false, false) =
    $doc.display('pdate')

    = $doc.displayPrettyName('updateDate', false, false) =
    $doc.display('updateDate')

    = $doc.displayPrettyName('link', false, false) =
    $doc.display('link')

    = $doc.displayPrettyName('headerImage', false, false) =

    {{html}}
    #set ($attachmentPickerParams = {
      'id': 'XWiki.DeFacto.FactCheck.FactCheckClass_0_headerImage',
      'name': 'XWiki.DeFacto.FactCheck.FactCheckClass_0_headerImage',
      'data-search-scope': "document:$services.model.serialize($doc.documentReference)",
      'data-upload-allowed': $services.security.authorization.hasAccess('edit'),
      'data-accept': '.jpg,.jpeg,.png,.gif',
      'value': $object.getValue('headerImage')
    })
    #attachmentPicker($attachmentPickerParams)
    {{/html}}

    = $doc.displayPrettyName('headerImageCaption', false, false) =
    $doc.display('headerImageCaption')

    = $doc.displayPrettyName('headerImageCredits', false, false) =
    $doc.display('headerImageCredits')

    = $doc.displayPrettyName('headerAudio', false, false) =
    $doc.display('headerAudio')

    = $doc.displayPrettyName('headerAudioDescription', false, false) =
    $doc.display('headerAudioDescription')

    = $doc.displayPrettyName('headerVideo', false, false) =

    #set ($property = $object.getxWikiClass().get('headerVideo'))
    (% class="xHint" %)(((
      $services.localization.render($property.hint)
    )))

    $doc.display('headerVideo')

    = $doc.displayPrettyName('chapeau', false, false) =
    $doc.display('chapeau')

    = $doc.displayPrettyName('content', false, false) =
    $doc.display('content')

    = $doc.displayPrettyName('themes', false, false) =
    $doc.display('themes')

    = Tags =
    #set ($tagObject = $doc.getObject('XWiki.TagClass'))
    #set ($tags = $tagObject.getValue('tags'))
    {{html}}
    #set ($discard = $xwiki.jsfx.use('uicomponents/suggest/suggestPropertyValues.js',
      {'forceSkinAction': true, 'language': $xcontext.locale}))
    #*
    #set ($suggestParams = {
          'class': 'suggest-propertyValues',
          'multiple': 'multiple',
          'data-className': 'XWiki.TagClass',
          'data-propertyName': 'tags',
          'value': $tags
    })*#
    ## The suggestions work best with the options below than with the TagClass
    #set ($suggestParams = {
      'class': 'suggest-propertyValues',
      'placeholder': '',
      'data-className': 'XWiki.DeFacto.Une.UneConfigClass',
      'data-propertyName': 'tags',
      'multiple': 'multiple',
      'name': 'tags',
      'value': $tags
    })
    #suggestInput($suggestParams)
    {{/html}}

    #if ($doc.fullName.startsWith('Medias.Factuel.'))
      = $doc.displayPrettyName('mediaTopics', false, false) =
      $doc.display('mediaTopics')

      = $doc.displayPrettyName('locations', false, false) =
      $doc.display('locations')

    #end

    = $doc.displayPrettyName('categories', false, false) =
    $doc.display('categories')

    = $doc.displayPrettyName('media', false, false) =
    $doc.display('media')
  )))
  (% role="tabpanel" class="tab-pane" id="review" %)(((
    #set ($discard = $doc.use($claimReview))

    ## 'itemReviewedAppearanceDatePublished', 'itemReviewedAppearanceAuthorName', 'itemReviewedAppearancePublisherName'
    #set ($propertyNames = ['claimReviewed', 'itemReviewedDatePublished', 'itemReviewedAuthorType', 'itemReviewedAuthorName', 'itemReviewedAuthorUrl', 'itemReviewedAppearanceUrl', 'itemReviewedAppearanceName', 'reviewRatingValue', 'reviewRatingAlternateName', 'claimReviewedComment'])
    #foreach ($propertyName in $propertyNames)
      = $doc.displayPrettyName($propertyName, false, false) =
      (% class="defacto-claimreview-$propertyName" %)(((
        $doc.display($propertyName)
      )))
    #end
  )))
#else
  #if ("$!request.published" != '')
    {{info}}
    #if ($request.published == 'true')
      Le fact-check a bien été publié.
    #else
      Le fact-check a bien été dépublié.
    #end
    {{/info}}
  #end
  (% class="defacto-fact-check-title" %)(((
    = $doc.displayTitle =
  )))
  #set ($media = $object.getValue('media'))
  #if ($media.indexOf('Surligneurs') &gt;= 0)
      #set ($itemReviewedAppearanceName = $claimReview.getValue('itemReviewedAppearanceName'))
      #set ($itemReviewedAppearanceUrl = $claimReview.getValue('itemReviewedAppearanceUrl'))
      #set ($reviewRatingAlternateName = $claimReview.getValue('reviewRatingAlternateName'))
      #set ($reviewRatingValue = $claimReview.getValue('reviewRatingValue'))
      #set ($claimReviewedComment = $claimReview.getValue('claimReviewedComment'))
      #if ("$!itemReviewedAppearanceName" != '')
        (% class="defacto-claim-review-appearance" %)(((
          [[$itemReviewedAppearanceName&gt;&gt;$itemReviewedAppearanceUrl]]
        )))
        (% class="defacto-claim-review-rating-name" %)(((
          (% class="label label-warning" %)$reviewRatingAlternateName(%%)
        )))
        #if ("$!claimReviewedComment" != '')
          (% class="defacto-claim-review-comment" %)(((
            $claimReviewedComment
          )))
        #end
      #end
  #end
  (% class="defacto-fact-check-date" %)(((
    #set ($pdate = $object.getValue('pdate'))
    #if ("$!pdate" != '')
      #set ($dateFormatter = $xwiki.jodatime.getDateTimeFormatterForPattern('EEEE d MMMMM yyyy à HH:mm').withLocale('fr'))
      (% class="defacto-fact-check-publication-date" %)(((
        Publié le $dateFormatter.print($pdate)
      )))
    #end
    #set ($udate = $object.getValue('updateDate'))
    #if ("$!udate" != '')
      (% class="defacto-fact-check-update-date" %)(((
        – Mis à jour le $dateFormatter.print($udate)
      )))
    #end
  )))
  #*
  #set ($claimReviewed = $claimReview.getValue('claimReviewed'))
  #if ($claimReviewed != $NULL)
    #set ($claimReviewed = $claimReviewed.trim())
  #end
  #if ("$!claimReviewed" != '')
  (% class="defacto-claim-review row" %)(((
    (% class="col-sm-4" %)(((
      == Déclaration ==
      $claimReviewed
    )))
    (% class="col-sm-4" %)(((
      == Niveau de factualité ==
      #set ($reviewRatingAlternateName = $claimReview.getValue('reviewRatingAlternateName'))
      #set ($reviewRatingValue = $claimReview.getValue('reviewRatingValue'))
      #if ("$!reviewRatingAlternateName" != '')
        #set ($reviewRatingValue = $mathtool.toInteger($reviewRatingValue))
        #set ($labelClass = 'label-warning')
        #if ($reviewRatingValue &lt; 3)
          #set ($labelClass = 'label-danger')
        #end
        (% class="defacto-claim-review-rating-name" %)(((
          (% class="label $labelClass" %)$reviewRatingAlternateName(%%)
        )))
      #end
    )))
    (% class="col-sm-4" %)(((
      == Source ==
      #set ($itemReviewedAppearanceName = $claimReview.getValue('itemReviewedAppearanceName'))
      #set ($itemReviewedAppearanceUrl = $claimReview.getValue('itemReviewedAppearanceUrl'))
      #if ("$!itemReviewedAppearanceName" != '')
        (% class="defacto-claim-review-appearance-name" %)(((
          #if ("$!itemReviewedAppearanceUrl" != '')
            [[$itemReviewedAppearanceName&gt;&gt;$itemReviewedAppearanceUrl]]
          #else
            $itemReviewedAppearanceName
          #end
        )))
      #end
    )))
  )))
  #end
  *#
  #set ($headerVideo = $object.getValue('headerVideo'))
  #set ($headerImage = $object.getValue('headerImage'))
  #if ("$!headerVideo" != '')
    (% class="defacto-fact-check-header-video" %)(((
      {{html clean="false"}}
      $headerVideo
      {{/html}}
    )))
  #elseif ("$!headerImage" != '')
    (% class="defacto-fact-check-header-image" %)(((
      [[image:$headerImage||queryString="width=1000"]]
      #set ($headerImageCaption = $object.getValue('headerImageCaption'))
      #set ($headerImageCredits = $object.getValue('headerImageCredits'))
      (% class="defacto-fact-check-header-media-legend" %)(((
        #if ("$!headerImageCaption" != '')
          (% class="defacto-fact-check-header-media-caption" %)(((
            $headerImageCaption
          )))
        #end
        #if ("$!headerImageCredits" != '')
          (% class="defacto-fact-check-header-media-credits" %)((( ($headerImageCredits) )))
        #end
      )))
    )))
  #end
  #set ($headerAudio = $object.getValue('headerAudio'))
  #set ($headerAudioDescription = $object.getValue('headerAudioDescription'))
  #if ("$!headerAudio" != '')
    {{html clean="false"}}
      &lt;audio controls src="$headerAudio"&gt;
        Le fichier audio ne peut être lu par votre navigateur car celui-ci ne peut interpréter la balise &lt;code&gt;audio&lt;/code&gt;.
      &lt;/audio&gt;
    {{/html}}

    #if ("$!headerAudioDescription" != '')
    (% class="defacto-fact-check-header-audio-description" %)(((
      $headerAudioDescription
    )))
    #end
  #end
  #set ($media = $object.getValue('media'))
  #if ("$!media" != '')
    #set ($mediaPage = $xwiki.getDocument($media))
    #set ($mediaObject = $mediaPage.getObject('XWiki.DeFacto.Media.MediaClass'))
    #set ($copyright = $mediaObject.getValue('copyright'))
    #if ("$!copyright" != '')
      (% class="defacto-fact-check-copyright" %)(((
        $copyright
      )))
    #end
  #end
  #set ($authors = $object.getValue('authors'))
  #if ("$!authors" != '')
    ; Auteur(s)
    : $doc.display('authors', $object)
  #end
  (% class="defacto-fact-check-chapeau" %)(((
    $doc.display('chapeau')
  )))

  (% class="defacto-fact-check-body" %)(((
    ##$doc.display('content')
    ## TODO: check why the figure elements are not present anymore when using display("content")
    $doc.getContent()
  )))

  #set ($claimReview = $doc.getObject('XWiki.DeFacto.Review.ClaimReviewClass'))
  #set ($claimReviewJson = $claimReview.getValue('json'))
  #if ("$!claimReviewJson" != '')
    #set ($claimReviews = $jsontool.fromString($claimReviewJson))
    #if ($claimReviews.class.name == 'java.util.ArrayList' &amp;&amp; $claimReviews.size() &gt; 0)
      (% class="box defacto-box claim-stats" %)(((
        == Statistiques relatives à une ou plusieurs déclaration(s) fact-checkée(s) par cet article ==
        #foreach ($claimReview in $claimReviews)
          #set ($itemReviewed = $claimReview.itemReviewed)
          #set ($appearance = $itemReviewed.appearance)
          #if ($appearance.interactionStatistic.size() &gt; 0)
            #set ($appearanceText = $appearance.text)
            #set ($appearanceText = $appearanceText.replaceAll('https://.*', '').trim())
            * URL de la déclaration : {{html clean="false"}}&lt;a href="$appearance.url" target="_blank"&gt;$stringtool.abbreviate($appearance.url, 40)&lt;/a&gt;{{/html}}
            #if ("$!appearanceText" != '')
            * Texte de la déclaration : (% class="claim-text" %)(((
              $appearanceText
            )))
            #end
            #foreach ($stat in $appearance.interactionStatistic)
              #set ($label = "$stat.interactionService.name : $stat.interactionType")
              #if ($label == 'Twitter : ShareAction')
                #set ($label = $services.localization.render("claim.interactionStatistic.${stat.interactionService.name}.${stat.interactionType}"))
              #end
              * $label : $stat.userInteractionCount
            #end
          #end
        #end
      )))
    #end
  #end

  {{socialMediaShare media="twitter,facebook,linkedin,mail" twitterExtra=" – via @DEFACTO_UE"/}}

  #set ($tagObject = $doc.getObject('XWiki.TagClass'))
  #if ($tagObject != $NULL)
    #set ($tags = $tagObject.getValue('tags'))
    #if ($tags.size() &gt; 0)
      (% class="defacto-tags" %)(((
      #foreach ($tag in $tags)
        * [[$tag&gt;&gt;Main.Search||queryString="f_type=DOCUMENT&amp;f_property.XWiki.TagClass.tags_string=$escapetool.url($tag)&amp;text=*"]]
      #end
      )))
    #end
  #end
  #set ($link = $object.getValue('link'))
  #set ($notice = $mediaObject.getValue('notice'))
  (% class="box defacto-box factcheck-source" %)(((
    #if ($mediaObject != $NULL)
      #set ($mediaSite = $mediaObject.getValue('site'))
      #set ($mediaLogo = $mediaObject.getValue('logo'))
      #if ("$!mediaLogo" != '')
        (% class="factcheck-media-logo" %)(((
          [[image:$media@$mediaLogo]]
        )))
      #end
      {{html clean="false"}}
      #if ("$!link" != '')
        &lt;div class="factcheck-also-published-by-media"&gt;
        Ce fact-check a été également publié par &lt;a href="$escapetool.xml($mediaSite)"&gt;$escapetool.xml($mediaPage.title)&lt;/a&gt; :
        &lt;em&gt;&lt;a href="$escapetool.xml($link)"&gt;$doc.title&lt;/a&gt;&lt;/em&gt;.
        &lt;/div&gt;
      #else
        &lt;div class="factcheck-also-published-by-media"&gt;
        Ce fact-check a été également publié par &lt;a href="$escapetool.xml($mediaSite)"&gt;$escapetool.xml($mediaPage.title)&lt;/a&gt;.
        &lt;/div&gt;
      #end
      #if ("$!notice" != '')
        &lt;div class="factcheck-media-notice"&gt;
          #set ($xdom = $services.rendering.parse($notice, 'xwiki/2.1'))
          $services.rendering.render($xdom, 'html/5.0')
        &lt;/div&gt;
      #end
      {{/html}}
    #end
  )))

#end
)))

{{/velocity}}</content>
  <object>
    <name>XWiki.DeFacto.FactCheck.FactCheckSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>f539067c-7beb-4c37-815e-f03765c7ff6a</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  //  var objectNumber = $('input[name="defacto-tags-object-number"').val();
  var objectNumber = 0;
  $('select[name="tags"]').on('change', function(event) {
    // Remove the tag inputs previously set
    $('#mainContentArea &gt; form .defacto-tag-input').remove();
    var form = $('#mainContentArea &gt; form');
    var tags = $(this).val();
    if (tags !== null) {
      tags.each(function(item, index) {
        var node = $('&lt;input type="hidden" class="defacto-tag-input" name="XWiki.TagClass_' + objectNumber + '_tags"/&gt;;');
        node.attr('value', item);
        form.append(node);
      });
    } else {
      var node = $('&lt;input type="hidden" class="defacto-tag-input" name="XWiki.TagClass_' + objectNumber + '_tags"/&gt;;');
      node.attr('value', '');
      form.append(node);
    }
    /*form.find('.xwiki-pinned-child-pages li').each(function (index) {
        var reference = $(this).data('reference')
        var node = $('&amp;lt;input type="hidden" class="xwiki-pinned-child-pages-input" name="XWiki.PinnedChildPagesClass_' + objectNumber + '_pinnedChildPages"/&amp;gt;');
        node.attr('value', reference);
        form.append(node);
    });*/
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.DeFacto.FactCheck.FactCheckSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>9585de55-b622-4c1a-a476-e8313249a427</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#xwikicontent {
  overflow-x: hidden; /* The overflowing image rule generates an horizontal overflow that we want to hide. */
}

#mainContentArea {
  max-width: inherit;
}

#document-title {
  display: none;
}

.document-header + hr {
  display: none;
}

.defacto-fact-check {
  font-size: 16px;
  audio {
    width: 100%;
  }
  .defacto-fact-check-title {
    h1 {
      font-size: 1.6em;
      margin-bottom: 0;
      font-weight: 400;
    }
    margin-bottom: 1.5em;
  }

  .defacto-claim-review-appearance {
    margin-top: -1em;
  }

  .defacto-claim-review-rating-name {
    .label {
      text-transform: uppercase;
      font-size: inherit;
      &amp;.label-warning {
        background: @yellow;
      }
    }
  }

  .defacto-claim-review-comment p {
    background: @yellow;
    line-height: 30px;
    display: inline;
  }

  .defacto-fact-check-date {
    text-align: right;
    font-style: italic;
    color: #525e66;
    font-size: 0.9em;
  }

  .defacto-fact-check-update-date {
    margin-left: 0.3em;
  }

  .defacto-fact-check-publication-date, .defacto-fact-check-update-date {
    display: inline-block;
  }

  .defacto-fact-check-copyright {
    text-align: center;
    font-size: 0.9em;
    margin-bottom: 1em;
    p {
      margin-bottom: 0;
    }
  }

  .defacto-fact-check-header-video {
    margin-bottom: 1em;
  }

  .defacto-fact-check-chapeau {
    font-weight: 400;
    font-size: 1.4em;
    color: #5f727f;
    line-height: 1.2em;
    margin-bottom: 1em;
  }

  h3 {
    font-weight: bold;
    font-size: 1.4em;
  }

  .defacto-fact-check-body {
    p {
      margin-bottom: 2em;
      b, strong {
        font-weight: 500;
      }
    }
  }

  .defacto-fact-check-header-image {
    .defacto-fact-check-header-media-caption, .defacto-fact-check-header-media-credits {
      display: inline-block;
      font-style: italic;
      color: #96a3aa;
    }
    .defacto-fact-check-header-media-credits {
      margin-left: 0.5em;
    }
  }

  .factcheck-source {
    /**.defacto-media-logo {
      text-align: center;
      img {
        max-height: 160px;
      }
    }*/
    display: grid;
    grid-template-areas: "logo link"
      "notice notice";
    align-items: center;
    grid-template-columns: 1fr 3fr;
    grid-column-gap: 2em;

    .factcheck-media-logo {
      text-align: center;
      .wikiexternallink {
        background: inherit;
      }
      grid-area: logo;
    }

    .factcheck-also-published-by-media {
      grid-area: link;
    }

    .factcheck-media-notice {
      /** font-style: italic; */
      font-size: 0.9em;
      margin-top: 1rem;
      color: #777;
      grid-area: notice;
    }
  }

  .defacto-fact-check-quote {
    padding: 10px 20px;
    margin: 0 0 20px;
    font-size: 17.5px;
    border-left: 5px solid #eeeeee;
  }
}

/************************ AFP Factuel **********************/
.image {
  text-align: center;
  .legend {
    font-style: italic;
    color: #96a3aa;
    margin: 30px 30px 20px;
    display: block;
  }
}

.twitter-tweet {
  margin: auto;
}

/** g2web is used for tweets and YouTube videos embeds */
.g2web {
  width: 100%;
  margin: auto;
  padding-top: 0px;
  padding-bottom: 36px;
}

div.grid-with-margin {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 1em;
}

.defacto-fact-check .defacto-fact-check-body figure p {
  margin-bottom: 0;
}

figure {
  margin: 1rem 0;
  display: block;
  text-align: center;
  figcaption {
    text-align: center;
    margin: 10px 30px 20px;
    div[itemprop="caption"], div[itemprop="credit"] {
      display: inline;
      font-style: italic;
      color: #96a3aa;
      p {
        display: inline;
      }
    }
    div[itemprop="credit"] {
      margin-left: 1rem;
      &amp;:before {
        content: "(";
      }
      &amp;:after {
        content: ")"
      }
    }
  }
}

/** end AFP Factuel */

/** FTVI */

.defacto-fact-check .defacto-fact-check-body {
  /** Needed for "encadré dark mode" - See https://www.ftvi-preprod.fr/vrai-ou-fake/test-encadre-darkmode-3_1985602.html */
  .defacto-fact-check .subheader {
    color: @text-color;
  }

  /** Needed for "encadré dark mode" */
  .defacto-fact-check strong {
    color: @text-color;
  }

  .ftvi_citation_author p, p.ftvi_citation_source {
    margin-bottom: 0;
  }
}


/** end FTVI */

.defacto-fact-check-edit {
  h1 {
    text-transform: uppercase;
    font-weight: normal;
    font-size: 1em;
  }
  .defacto-claimreview-reviewRatingValue label {
    display: inline-block;
    margin-right: 0.5em;
  }
}

@media (min-width: @screen-md-min) {
  .defacto-fact-check {
    font-size: 20px;
    max-width: 50%;
    margin: auto;
    .defacto-fact-check-title h1 {
      font-size: 2.4em;
    }
    .defacto-fact-check-header-image {
      left: 50%;
      margin-left: -50vw;
      margin-right: -50vw;
      max-width: 100vw;
      position: relative;
      right: 50%;
      width: 100vw;
      text-align: center;
      img {
        object-fit: fill;
        max-width: 80%;
      }
      .defacto-fact-check-header-media-legend {
        margin: auto;
        max-width: 900px;
      }
    }

    .factcheck-source {
      margin-top: 1em;
      grid-template-areas:
        "logo link"
        "logo notice";
    }

    /** AFP Factuel embeds */
    .g2web {
      width: 80%;
    }
  }

  #xdocFooter {
    max-width: 50%;
    margin: auto;
    padding: 0;
  }
}

/** Do not display share buttons UIX in the footer since they're already present in the sheet. */
.xwiki-social-media-share-content-footer-uix {
  display: none;
}

.claim-stats {
  h2 {
    font-size: 2rem;
    font-weight: 500;
  }
  .claim-text {
    font-style: italic;
    padding-left: 1rem;
    border-left: 3px solid #ddd;
    margin: 1rem;
    color: #666;
    p {
      margin: 0;
    }
  }
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
